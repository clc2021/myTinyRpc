# 若要创建客户端会话，应用程序代码必须提供一个连接字符串，
# 其中包含以逗号分隔的主机：端口对列表，每个对应于 ZooKeeper 
# 服务器（例如“127.0.0.1：4545”或“127.0.0.1：3000,127.0.0.1：3001,
# 127.0.0.1：3002”）。ZooKeeper 客户端库将选择任意服务器并尝试连接到该服务器。
# 如果此连接失败，或者客户端由于任何原因与服务器断开连接，则客户端将自动尝试列表
# 中的下一个服务器，直到（重新）建立连接。

# 这两个地址分别是针对不同的服务的：
# rpc节点的IP地址和端口：这是用于指定 RPC（Remote Procedure Call，远程过程调用）节点的地址和端口。
# RPC 是一种通信机制，允许一个程序调用另一个地址空间（通常是一个不同的计算机上）的过程，而就像调用本
# 地过程一样调用远程过程。在你的配置文件中，指定了 RPC 节点的 IP 地址和端口号，这可能是你的应用程序
# 或服务所提供的远程调用接口。
# ZooKeeper的IP地址和端口号：这是用于指定 ZooKeeper 服务器的地址和端口。ZooKeeper 是一个分布式的
# 协调服务，用于管理和维护分布式系统中的配置信息、命名、提供分布式锁等。在你的配置文件中，指定了 
# ZooKeeper 服务器的 IP 地址和端口号，你的应用程序可能会连接到这个地址上的 ZooKeeper 服务器来进行
# 配置管理、服务发现等操作。
# 简而言之，rpc节点的地址和端口用于指定远程过程调用的接口，而ZooKeeper的地址和端口用于指定分布式协调
# 服务的接入点。两者的用途和功能不同。

# rpc节点的Ip地址
rpc_server_ip=127.0.0.1
# rpc节点的port端口
rpc_server_port=4545
# zk的Ip地址
zookeeper_ip=127.0.0.1
# zk的port端口号
zookeeper_port=12182
#负载均衡策略
# loadbalancer=RoundRobinLoadBalancer
loadbalancer=ConsistentHashLoadBalancer
#容错机制选择
faulttolerant=FailOver
# faulttolerant=FailFast
#重试次数
retrycount=3 